/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getOptionDecoder,
  getOptionEncoder,
  getStructDecoder,
  getStructEncoder,
  getU16Decoder,
  getU16Encoder,
  getU8Decoder,
  getU8Encoder,
  type Codec,
  type Decoder,
  type Encoder,
  type Option,
  type OptionOrNullable,
} from '@solana/kit';

export type UpdatePriorityFeeParametersArgs = {
  priorityFeeLookbackEpochs: Option<number>;
  priorityFeeLookbackOffset: Option<number>;
  priorityFeeMaxCommissionBps: Option<number>;
  priorityFeeErrorMarginBps: Option<number>;
  priorityFeeScoringStartEpoch: Option<number>;
};

export type UpdatePriorityFeeParametersArgsArgs = {
  priorityFeeLookbackEpochs: OptionOrNullable<number>;
  priorityFeeLookbackOffset: OptionOrNullable<number>;
  priorityFeeMaxCommissionBps: OptionOrNullable<number>;
  priorityFeeErrorMarginBps: OptionOrNullable<number>;
  priorityFeeScoringStartEpoch: OptionOrNullable<number>;
};

export function getUpdatePriorityFeeParametersArgsEncoder(): Encoder<UpdatePriorityFeeParametersArgsArgs> {
  return getStructEncoder([
    ['priorityFeeLookbackEpochs', getOptionEncoder(getU8Encoder())],
    ['priorityFeeLookbackOffset', getOptionEncoder(getU8Encoder())],
    ['priorityFeeMaxCommissionBps', getOptionEncoder(getU16Encoder())],
    ['priorityFeeErrorMarginBps', getOptionEncoder(getU16Encoder())],
    ['priorityFeeScoringStartEpoch', getOptionEncoder(getU16Encoder())],
  ]);
}

export function getUpdatePriorityFeeParametersArgsDecoder(): Decoder<UpdatePriorityFeeParametersArgs> {
  return getStructDecoder([
    ['priorityFeeLookbackEpochs', getOptionDecoder(getU8Decoder())],
    ['priorityFeeLookbackOffset', getOptionDecoder(getU8Decoder())],
    ['priorityFeeMaxCommissionBps', getOptionDecoder(getU16Decoder())],
    ['priorityFeeErrorMarginBps', getOptionDecoder(getU16Decoder())],
    ['priorityFeeScoringStartEpoch', getOptionDecoder(getU16Decoder())],
  ]);
}

export function getUpdatePriorityFeeParametersArgsCodec(): Codec<
  UpdatePriorityFeeParametersArgsArgs,
  UpdatePriorityFeeParametersArgs
> {
  return combineCodec(
    getUpdatePriorityFeeParametersArgsEncoder(),
    getUpdatePriorityFeeParametersArgsDecoder()
  );
}
