/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getStructDecoder,
  getStructEncoder,
  getU16Decoder,
  getU16Encoder,
  getU64Decoder,
  getU64Encoder,
  type Address,
  type FixedSizeCodec,
  type FixedSizeDecoder,
  type FixedSizeEncoder,
} from '@solana/kit';
import {
  getDecreaseComponentsDecoder,
  getDecreaseComponentsEncoder,
  getRebalanceTypeTagDecoder,
  getRebalanceTypeTagEncoder,
  type DecreaseComponents,
  type DecreaseComponentsArgs,
  type RebalanceTypeTag,
  type RebalanceTypeTagArgs,
} from '.';

export type RebalanceEvent = {
  voteAccount: Address;
  epoch: number;
  rebalanceTypeTag: RebalanceTypeTag;
  increaseLamports: bigint;
  decreaseComponents: DecreaseComponents;
};

export type RebalanceEventArgs = {
  voteAccount: Address;
  epoch: number;
  rebalanceTypeTag: RebalanceTypeTagArgs;
  increaseLamports: number | bigint;
  decreaseComponents: DecreaseComponentsArgs;
};

export function getRebalanceEventEncoder(): FixedSizeEncoder<RebalanceEventArgs> {
  return getStructEncoder([
    ['voteAccount', getAddressEncoder()],
    ['epoch', getU16Encoder()],
    ['rebalanceTypeTag', getRebalanceTypeTagEncoder()],
    ['increaseLamports', getU64Encoder()],
    ['decreaseComponents', getDecreaseComponentsEncoder()],
  ]);
}

export function getRebalanceEventDecoder(): FixedSizeDecoder<RebalanceEvent> {
  return getStructDecoder([
    ['voteAccount', getAddressDecoder()],
    ['epoch', getU16Decoder()],
    ['rebalanceTypeTag', getRebalanceTypeTagDecoder()],
    ['increaseLamports', getU64Decoder()],
    ['decreaseComponents', getDecreaseComponentsDecoder()],
  ]);
}

export function getRebalanceEventCodec(): FixedSizeCodec<
  RebalanceEventArgs,
  RebalanceEvent
> {
  return combineCodec(getRebalanceEventEncoder(), getRebalanceEventDecoder());
}
