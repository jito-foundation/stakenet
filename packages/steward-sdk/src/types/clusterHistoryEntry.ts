/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  fixDecoderSize,
  fixEncoderSize,
  getBytesDecoder,
  getBytesEncoder,
  getStructDecoder,
  getStructEncoder,
  getU16Decoder,
  getU16Encoder,
  getU32Decoder,
  getU32Encoder,
  getU64Decoder,
  getU64Encoder,
  type FixedSizeCodec,
  type FixedSizeDecoder,
  type FixedSizeEncoder,
  type ReadonlyUint8Array,
} from '@solana/kit';

export type ClusterHistoryEntry = {
  totalBlocks: number;
  epoch: number;
  padding0: ReadonlyUint8Array;
  epochStartTimestamp: bigint;
  padding: ReadonlyUint8Array;
};

export type ClusterHistoryEntryArgs = {
  totalBlocks: number;
  epoch: number;
  padding0: ReadonlyUint8Array;
  epochStartTimestamp: number | bigint;
  padding: ReadonlyUint8Array;
};

export function getClusterHistoryEntryEncoder(): FixedSizeEncoder<ClusterHistoryEntryArgs> {
  return getStructEncoder([
    ['totalBlocks', getU32Encoder()],
    ['epoch', getU16Encoder()],
    ['padding0', fixEncoderSize(getBytesEncoder(), 2)],
    ['epochStartTimestamp', getU64Encoder()],
    ['padding', fixEncoderSize(getBytesEncoder(), 240)],
  ]);
}

export function getClusterHistoryEntryDecoder(): FixedSizeDecoder<ClusterHistoryEntry> {
  return getStructDecoder([
    ['totalBlocks', getU32Decoder()],
    ['epoch', getU16Decoder()],
    ['padding0', fixDecoderSize(getBytesDecoder(), 2)],
    ['epochStartTimestamp', getU64Decoder()],
    ['padding', fixDecoderSize(getBytesDecoder(), 240)],
  ]);
}

export function getClusterHistoryEntryCodec(): FixedSizeCodec<
  ClusterHistoryEntryArgs,
  ClusterHistoryEntry
> {
  return combineCodec(
    getClusterHistoryEntryEncoder(),
    getClusterHistoryEntryDecoder()
  );
}
