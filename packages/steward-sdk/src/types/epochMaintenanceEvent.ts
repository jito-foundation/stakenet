/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getBooleanDecoder,
  getBooleanEncoder,
  getOptionDecoder,
  getOptionEncoder,
  getStructDecoder,
  getStructEncoder,
  getU64Decoder,
  getU64Encoder,
  type Codec,
  type Decoder,
  type Encoder,
  type Option,
  type OptionOrNullable,
} from '@solana/kit';

export type EpochMaintenanceEvent = {
  validatorIndexToRemove: Option<bigint>;
  validatorListLength: bigint;
  numPoolValidators: bigint;
  validatorsToRemove: bigint;
  validatorsToAdd: bigint;
  maintenanceComplete: boolean;
};

export type EpochMaintenanceEventArgs = {
  validatorIndexToRemove: OptionOrNullable<number | bigint>;
  validatorListLength: number | bigint;
  numPoolValidators: number | bigint;
  validatorsToRemove: number | bigint;
  validatorsToAdd: number | bigint;
  maintenanceComplete: boolean;
};

export function getEpochMaintenanceEventEncoder(): Encoder<EpochMaintenanceEventArgs> {
  return getStructEncoder([
    ['validatorIndexToRemove', getOptionEncoder(getU64Encoder())],
    ['validatorListLength', getU64Encoder()],
    ['numPoolValidators', getU64Encoder()],
    ['validatorsToRemove', getU64Encoder()],
    ['validatorsToAdd', getU64Encoder()],
    ['maintenanceComplete', getBooleanEncoder()],
  ]);
}

export function getEpochMaintenanceEventDecoder(): Decoder<EpochMaintenanceEvent> {
  return getStructDecoder([
    ['validatorIndexToRemove', getOptionDecoder(getU64Decoder())],
    ['validatorListLength', getU64Decoder()],
    ['numPoolValidators', getU64Decoder()],
    ['validatorsToRemove', getU64Decoder()],
    ['validatorsToAdd', getU64Decoder()],
    ['maintenanceComplete', getBooleanDecoder()],
  ]);
}

export function getEpochMaintenanceEventCodec(): Codec<
  EpochMaintenanceEventArgs,
  EpochMaintenanceEvent
> {
  return combineCodec(
    getEpochMaintenanceEventEncoder(),
    getEpochMaintenanceEventDecoder()
  );
}
