/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getF64Decoder,
  getF64Encoder,
  getStructDecoder,
  getStructEncoder,
  getU16Decoder,
  getU16Encoder,
  getU8Decoder,
  getU8Encoder,
  type FixedSizeCodec,
  type FixedSizeDecoder,
  type FixedSizeEncoder,
} from '@solana/kit';

export type ScoreDetails = {
  /** Max MEV commission observed */
  maxMevCommission: number;
  /** Epoch of max MEV commission */
  maxMevCommissionEpoch: number;
  /** Epoch when superminority was detected */
  superminorityEpoch: number;
  /** Ratio that failed delinquency check */
  delinquencyRatio: number;
  /** Epoch when delinquency was detected */
  delinquencyEpoch: number;
  /** Max commission observed */
  maxCommission: number;
  /** Epoch of max commission */
  maxCommissionEpoch: number;
  /** Max historical commission observed */
  maxHistoricalCommission: number;
  /** Epoch of max historical commission */
  maxHistoricalCommissionEpoch: number;
};

export type ScoreDetailsArgs = ScoreDetails;

export function getScoreDetailsEncoder(): FixedSizeEncoder<ScoreDetailsArgs> {
  return getStructEncoder([
    ['maxMevCommission', getU16Encoder()],
    ['maxMevCommissionEpoch', getU16Encoder()],
    ['superminorityEpoch', getU16Encoder()],
    ['delinquencyRatio', getF64Encoder()],
    ['delinquencyEpoch', getU16Encoder()],
    ['maxCommission', getU8Encoder()],
    ['maxCommissionEpoch', getU16Encoder()],
    ['maxHistoricalCommission', getU8Encoder()],
    ['maxHistoricalCommissionEpoch', getU16Encoder()],
  ]);
}

export function getScoreDetailsDecoder(): FixedSizeDecoder<ScoreDetails> {
  return getStructDecoder([
    ['maxMevCommission', getU16Decoder()],
    ['maxMevCommissionEpoch', getU16Decoder()],
    ['superminorityEpoch', getU16Decoder()],
    ['delinquencyRatio', getF64Decoder()],
    ['delinquencyEpoch', getU16Decoder()],
    ['maxCommission', getU8Decoder()],
    ['maxCommissionEpoch', getU16Decoder()],
    ['maxHistoricalCommission', getU8Decoder()],
    ['maxHistoricalCommissionEpoch', getU16Decoder()],
  ]);
}

export function getScoreDetailsCodec(): FixedSizeCodec<
  ScoreDetailsArgs,
  ScoreDetails
> {
  return combineCodec(getScoreDetailsEncoder(), getScoreDetailsDecoder());
}
