/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getDiscriminatedUnionDecoder,
  getDiscriminatedUnionEncoder,
  getOptionDecoder,
  getOptionEncoder,
  getStructDecoder,
  getStructEncoder,
  getU8Decoder,
  getU8Encoder,
  type Codec,
  type Decoder,
  type Encoder,
  type GetDiscriminatedUnionVariant,
  type GetDiscriminatedUnionVariantContent,
  type Option,
  type OptionOrNullable,
} from '@solana/kit';

export type AuthorityType =
  | { __kind: 'SetAdmin'; setAdmin: Option<number> }
  | { __kind: 'SetBlacklistAuthority'; setBlacklistAuthority: Option<number> }
  | { __kind: 'SetParameterAuthority'; setParameterAuthority: Option<number> };

export type AuthorityTypeArgs =
  | { __kind: 'SetAdmin'; setAdmin: OptionOrNullable<number> }
  | {
      __kind: 'SetBlacklistAuthority';
      setBlacklistAuthority: OptionOrNullable<number>;
    }
  | {
      __kind: 'SetParameterAuthority';
      setParameterAuthority: OptionOrNullable<number>;
    };

export function getAuthorityTypeEncoder(): Encoder<AuthorityTypeArgs> {
  return getDiscriminatedUnionEncoder([
    [
      'SetAdmin',
      getStructEncoder([['setAdmin', getOptionEncoder(getU8Encoder())]]),
    ],
    [
      'SetBlacklistAuthority',
      getStructEncoder([
        ['setBlacklistAuthority', getOptionEncoder(getU8Encoder())],
      ]),
    ],
    [
      'SetParameterAuthority',
      getStructEncoder([
        ['setParameterAuthority', getOptionEncoder(getU8Encoder())],
      ]),
    ],
  ]);
}

export function getAuthorityTypeDecoder(): Decoder<AuthorityType> {
  return getDiscriminatedUnionDecoder([
    [
      'SetAdmin',
      getStructDecoder([['setAdmin', getOptionDecoder(getU8Decoder())]]),
    ],
    [
      'SetBlacklistAuthority',
      getStructDecoder([
        ['setBlacklistAuthority', getOptionDecoder(getU8Decoder())],
      ]),
    ],
    [
      'SetParameterAuthority',
      getStructDecoder([
        ['setParameterAuthority', getOptionDecoder(getU8Decoder())],
      ]),
    ],
  ]);
}

export function getAuthorityTypeCodec(): Codec<
  AuthorityTypeArgs,
  AuthorityType
> {
  return combineCodec(getAuthorityTypeEncoder(), getAuthorityTypeDecoder());
}

// Data Enum Helpers.
export function authorityType(
  kind: 'SetAdmin',
  data: GetDiscriminatedUnionVariantContent<
    AuthorityTypeArgs,
    '__kind',
    'SetAdmin'
  >
): GetDiscriminatedUnionVariant<AuthorityTypeArgs, '__kind', 'SetAdmin'>;
export function authorityType(
  kind: 'SetBlacklistAuthority',
  data: GetDiscriminatedUnionVariantContent<
    AuthorityTypeArgs,
    '__kind',
    'SetBlacklistAuthority'
  >
): GetDiscriminatedUnionVariant<
  AuthorityTypeArgs,
  '__kind',
  'SetBlacklistAuthority'
>;
export function authorityType(
  kind: 'SetParameterAuthority',
  data: GetDiscriminatedUnionVariantContent<
    AuthorityTypeArgs,
    '__kind',
    'SetParameterAuthority'
  >
): GetDiscriminatedUnionVariant<
  AuthorityTypeArgs,
  '__kind',
  'SetParameterAuthority'
>;
export function authorityType<K extends AuthorityTypeArgs['__kind'], Data>(
  kind: K,
  data?: Data
) {
  return Array.isArray(data)
    ? { __kind: kind, fields: data }
    : { __kind: kind, ...(data ?? {}) };
}

export function isAuthorityType<K extends AuthorityType['__kind']>(
  kind: K,
  value: AuthorityType
): value is AuthorityType & { __kind: K } {
  return value.__kind === kind;
}
